<!-- MCP API Authentication Policy with PRM Support -->
<policies>
    <inbound>
        <base />
        
        <!-- Handle OPTIONS preflight requests (no auth required) -->
        <choose>
            <when condition="@(context.Request.Method == "OPTIONS")">
                <return-response>
                    <set-status code="200" />
                    <set-header name="Access-Control-Allow-Origin" exists-action="override">
                        <value>*</value>
                    </set-header>
                    <set-header name="Access-Control-Allow-Methods" exists-action="override">
                        <value>GET, POST, OPTIONS</value>
                    </set-header>
                    <set-header name="Access-Control-Allow-Headers" exists-action="override">
                        <value>Authorization, Content-Type</value>
                    </set-header>
                </return-response>
            </when>
        </choose>
        
        <!-- JWT Token Validation with PRM support -->
        <validate-jwt header-name="Authorization" 
                      failed-validation-httpcode="401" 
                      failed-validation-error-message="Unauthorized">
            
            <!-- OpenID configuration endpoint for your tenant -->
            <openid-config url="https://login.microsoftonline.com/{{tenant-id}}/v2.0/.well-known/openid-configuration" />
            
            <!-- Audiences that are allowed -->
            <audiences>
                <audience>api://{{client-id}}</audience>
                <audience>{{client-id}}</audience>
            </audiences>
            
            <!-- Token issuers -->
            <issuers>
                <issuer>https://sts.windows.net/{{tenant-id}}/</issuer>
                <issuer>https://login.microsoftonline.com/{{tenant-id}}/v2.0</issuer>
            </issuers>
        </validate-jwt>
        
        <!-- Set backend service to forward to function app MCP endpoint -->
        <set-backend-service base-url="https://{{function-app-hostname}}/api/mcp" />
        
    </inbound>
    
    <backend>
        <base />
    </backend>
    
    <outbound>
        <base />
        <!-- Add CORS headers -->
        <set-header name="Access-Control-Allow-Origin" exists-action="override">
            <value>*</value>
        </set-header>
    </outbound>
    
    <on-error>
        <base />
        <!-- Return 401 with WWW-Authenticate header pointing to PRM -->
        <choose>
            <when condition="@(context.Response.StatusCode == 401)">
                <set-header name="WWW-Authenticate" exists-action="override">
                    <value>@{
                        var host = context.Request.Headers.GetValueOrDefault("Host", "apim-mcp-dev-7204b7.azure-api.net");
                        return "Bearer resource_metadata=\"https://" + host + "/.well-known/mcp/protected-resource-metadata.json\"";
                    }</value>
                </set-header>
                <set-body>{"statusCode": 401, "message": "Unauthorized. Access token is missing or invalid."}</set-body>
            </when>
        </choose>
    </on-error>
</policies>